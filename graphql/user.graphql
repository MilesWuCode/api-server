type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    avatar_url: String!

    avatar: [Media!] @morphMany(relation: "avatar")

    todos(orderBy: _ @orderBy(columns: ["id", "created_at"])): [Todo!]!
        @hasMany(relation: "todos", type: PAGINATOR, defaultCount: 3)

    blogs(orderBy: _ @orderBy(columns: ["id", "created_at"])): [Blog!]!
        @hasMany(relation: "blogs", type: PAGINATOR, defaultCount: 3)
}

extend type Query {
    me: User! @auth @guard

    user(id: ID @eq): User @find

    users: [User!]! @paginate(defaultCount: 10, scopes: ["verified"])
}

extend type Mutation {
    registerUser(
        name: String! @rules(apply: ["required", "max:100"])
        email: String
            @rules(
                apply: ["required", "email", "unique:users,email"]
                # 也可以定義在這裡：resources/lang/en/validation.php:attributes
                attribute: "e-mail"
            )
        password: String! @rules(apply: ["required", "min:8"])
        comfirm_password: String!
            @rules(
                apply: ["required", "same:password"]
                # 也可以定義在這裡：resources/lang/en/validation.php:attributes
                attribute: "comfirm-password"
            )
    ): User @field(resolver: "RegisterUser")

    # changePassword(
    #     oldPassword: String! @rules(apply: ["required", "current_password:api"])
    #     password: String! @rules(apply: ["required", "min:8"])
    # ): User
}
