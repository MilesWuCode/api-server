{
	"info": {
		"_postman_id": "604f86fe-4640-49ab-ab58-55daa5165dd3",
		"name": "api-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CURL",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "註冊",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "miles",
											"type": "text"
										},
										{
											"key": "email",
											"value": "miles@email.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "comfirm_password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/user/register",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "寄驗證信",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "miles@email.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost/api/user/send-verify-email",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"user",
										"send-verify-email"
									]
								}
							},
							"response": []
						},
						{
							"name": "驗證信箱",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "hash",
											"value": "5149e06d1186903f2e5a7c6847678bf5395df09f",
											"type": "text"
										},
										{
											"key": "expires",
											"value": "1637649815",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost/api/user/verify-email",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"path": [
										"api",
										"user",
										"verify-email"
									]
								}
							},
							"response": []
						},
						{
							"name": "Access Token (登入)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const {token_type, access_token, refresh_token} = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable('token_type', token_type);",
											"",
											"postman.setEnvironmentVariable('access_token', access_token);",
											"",
											"postman.setEnvironmentVariable('refresh_token', refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										},
										{
											"key": "username",
											"value": "miles@email.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "*",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/oauth/token",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const {token_type, access_token, refresh_token} = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable('token_type', token_type);",
											"",
											"postman.setEnvironmentVariable('access_token', access_token);",
											"",
											"postman.setEnvironmentVariable('refresh_token', refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{client_secret}}",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/oauth/token",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "會員資料",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{http}}://{{domain}}/api/user",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "登出",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/user/logout",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"user",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Todo",
					"item": [
						{
							"name": "List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{http}}://{{domain}}/api/todo?page=2&limit=2&sort=id_desc",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"todo"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "sort",
											"value": "id_desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "abc",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/todo",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"todo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{http}}://{{domain}}/api/todo/27",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"todo",
										"27"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "test",
											"type": "text"
										},
										{
											"key": "active",
											"value": "1",
											"type": "text"
										},
										{
											"key": "_method",
											"value": "PUT",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/todo/26",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"todo",
										"26"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "DELETE",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/todo/19",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"todo",
										"19"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Blog",
					"item": [
						{
							"name": "List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog?page=1&limit=2&sort=id_desc&include=tags",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "sort",
											"value": "id_desc"
										},
										{
											"key": "include",
											"value": "tags"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "abcdefg",
											"type": "text"
										},
										{
											"key": "body",
											"value": "ggg",
											"type": "text"
										},
										{
											"key": "publish_at",
											"value": "2021-11-08",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "tag",
											"value": "",
											"description": "空值清空用",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tag[0]",
											"value": "a1",
											"type": "text"
										},
										{
											"key": "tag[1]",
											"value": "b2",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tag[2]",
											"value": "c3",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tag[3]",
											"value": "d4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tag[4]",
											"value": "e5",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tag[5]",
											"value": "f6",
											"description": "最多5個",
											"type": "text",
											"disabled": true
										},
										{
											"key": "gallery[0]",
											"value": "MTzRgoIEmuyXIg7s1e50vsAbjxisQTurhwFWyOMW.jpg",
											"type": "text"
										},
										{
											"key": "gallery[1]",
											"value": "temporary/siLO19IWTfteOtzZMCaXZP7VJJCQV4F7l5Z1KS59.jpg",
											"type": "text",
											"disabled": true
										},
										{
											"key": "gallery",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog?include=tag,gallery",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog"
									],
									"query": [
										{
											"key": "include",
											"value": "tag,gallery"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog/289?include=tags,gallery",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog",
										"289"
									],
									"query": [
										{
											"key": "include",
											"value": "tags,gallery"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PUT",
											"type": "text"
										},
										{
											"key": "title",
											"value": "abcdefg",
											"type": "text"
										},
										{
											"key": "body",
											"value": "ggg",
											"type": "text"
										},
										{
											"key": "publish_at",
											"value": "2021-11-08",
											"type": "text"
										},
										{
											"key": "status",
											"value": "1",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "",
											"description": "空值清空用",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags[0]",
											"value": "a1",
											"type": "text"
										},
										{
											"key": "tags[1]",
											"value": "b2",
											"type": "text"
										},
										{
											"key": "tags[2]",
											"value": "c3",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags[3]",
											"value": "d4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags[4]",
											"value": "e5",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags[5]",
											"value": "f6",
											"description": "最多5個",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog/240?include=tag,gallery",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog",
										"240"
									],
									"query": [
										{
											"key": "include",
											"value": "tag,gallery"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "DELETE",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog/201",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog",
										"201"
									]
								}
							},
							"response": []
						},
						{
							"name": "File Add",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "collection",
											"value": "gallery",
											"type": "text"
										},
										{
											"key": "file",
											"value": "{{temporary_file}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog/240/file",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog",
										"240",
										"file"
									]
								}
							},
							"response": []
						},
						{
							"name": "File Del",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "DELETE",
											"type": "text"
										},
										{
											"key": "collection",
											"value": "gallery",
											"type": "text"
										},
										{
											"key": "media_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/blog/240/file",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"blog",
										"240",
										"file"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "File",
					"item": [
						{
							"name": "File Upload To Temporary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const {file} = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable('temporary_file', file);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/miles/Desktop/007/c2.jpg"
										}
									]
								},
								"url": {
									"raw": "{{http}}://{{domain}}/api/file",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"file"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GraphQL",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "me",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  me {\n    id\n    name\n    email\n    avatar_url\n    avatar {\n      id\n      url\n    }\n    todos {\n      data {\n        id\n        content\n        active\n      }\n    }\n    blogs {\n      data {\n        id\n        title\n      }\n      paginatorInfo {\n        currentPage\n        lastPage\n      }\n    }\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Todo",
					"item": [
						{
							"name": "myTodo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query myTodo($id: ID!) {\n  myTodo(id: $id) {\n    id\n    content\n    active\n    created_at\n    updated_at\n  }\n}\n",
										"variables": "{\n  \"id\": 204\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "myTodos",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query myTodos($first: Int!, $page: Int) {\n  myTodos(first: $first, page: $page) {\n    data {\n      id\n      content\n      active\n      created_at\n      updated_at\n    }\n  }\n}\n",
										"variables": "{\n  \"first\": 3,\n  \"page\": 1\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "createTodo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "fragment todo on Todo {\n  id\n  content\n  active\n  created_at\n  updated_at\n}\n\nmutation createTodo($content: String!) {\n  createTodo(content: $content) {\n    ...todo\n  }\n}",
										"variables": "{\n  \"content\": \"Test...\"\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateTodo",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "fragment todo on Todo {\n  id\n  content\n  active\n  created_at\n  updated_at\n}\n\nmutation updateTodo($id: ID!, $content: String) {\n  updateTodo(id: $id, content: $content) {\n    ...todo\n  }\n}\n",
										"variables": "{\n  \"id\": 204,\n  \"content\": \"Try...\"\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Blog",
					"item": [
						{
							"name": "blogs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query blogs($first: Int!, $page: Int, $column: QueryBlogsOrderByColumn!, $order:SortOrder!) {\n  blogs(first: $first, page: $page, orderBy: { column: $column, order: $order }) {\n    data {\n      id\n      title\n      body\n      status\n      like_count\n      dislike_count\n      publish_at\n      created_at\n      updated_at\n      user {\n        id\n        name\n      }\n      tag {\n        data {\n          id\n          name\n        }\n      }\n      gallery {\n        data {\n          id\n          url\n        }\n      }\n    }\n    paginatorInfo {\n      currentPage\n      lastPage\n    }\n  }\n}\n",
										"variables": "{\n  \"first\": 3,\n  \"page\": 1,\n  \"column\": \"CREATED_AT\",\n  \"order\": \"ASC\"\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "myBlog",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query myBlog($id: ID!){\n  myBlog(id: $id) {\n    id\n    title\n    body\n    status\n    like_count\n    dislike_count\n    publish_at\n    created_at\n    updated_at\n    user {\n      id\n      name\n    }\n    tag {\n      data {\n        id\n        name\n      }\n    }\n    gallery {\n      data {\n        id\n        url\n      }\n    }\n  }\n}\n",
										"variables": "{\n  \"id\": 240\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "myBlogs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query myBlogs(\n  $first: Int!\n  $page: Int\n  $column: QueryMyBlogsOrderByColumn!\n  $order: SortOrder!\n) {\n  myBlogs(\n    first: $first\n    page: $page\n    orderBy: { column: $column, order: $order }\n  ) {\n    data {\n      id\n      title\n      body\n      status\n      like_count\n      dislike_count\n      publish_at\n      created_at\n      updated_at\n      user {\n        id\n        name\n      }\n      tag {\n        data {\n          id\n          name\n        }\n      }\n      gallery {\n        data {\n          id\n          url\n        }\n      }\n    }\n    paginatorInfo {\n      currentPage\n      lastPage\n    }\n  }\n}\n",
										"variables": "{\n  \"first\": 3,\n  \"page\": 1,\n  \"column\": \"CREATED_AT\",\n  \"order\": \"ASC\"\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "createBlog",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createBlog(\n  $title: String!\n  $body: String\n  $tag: [String!]\n  $gallery: [String!]\n) {\n  createBlog(title: $title, body: $body, tag: $tag, gallery: $gallery) {\n    id\n    title\n    body\n    status\n    tag {\n      data {\n        id\n        name\n      }\n    }\n    gallery {\n      data {\n        id\n        url\n      }\n    }\n  }\n}\n",
										"variables": "{\n  \"title\": \"title try...\",\n  \"body\": \"body try...\",\n  \"tag\": [\"abc\", \"def\"],\n  \"gallery\": [\"{{temporary_file}}\"]\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateBlog",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateBlog($id: ID!, $title: String!, $body: String, $tag: [String!]) {\n  updateBlog(id: $id, title: $title, body: $body, tag: $tag) {\n    id\n    title\n    body\n    status\n    tag {\n      data {\n        id\n        name\n      }\n    }\n    gallery {\n      data {\n        id\n        url\n      }\n    }\n  }\n}\n",
										"variables": "{\n  \"id\": 240,\n  \"title\": \"title try...\",\n  \"body\": \"body try...\",\n  \"tag\": [\"abc\", \"def\"]\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "addFileBlog",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation addFileBlog($id: ID!, $collection: String!, $file: String!) {\n  addFileBlog(id: $id, collection: $collection, file: $file) {\n    id\n    title\n    gallery {\n      data {\n        id\n        url\n      }\n    }\n  }\n}\n",
										"variables": "{\n  \"id\": 240,\n  \"collection\": \"gallery\",\n  \"file\": \"{{temporary_file}}\"\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delFileBlog",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation delFileBlog($id: ID!, $collection: String!, $media_id: Int!) {\n  delFileBlog(id: $id, collection: $collection, media_id: $media_id) {\n    id\n    title\n    gallery {\n      data {\n        id\n        url\n      }\n    }\n  }\n}\n",
										"variables": "{\n  \"id\": 240,\n  \"collection\": \"gallery\",\n  \"media_id\": 6\n}"
									}
								},
								"url": {
									"raw": "{{http}}://{{domain}}/graphql",
									"protocol": "{{http}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}